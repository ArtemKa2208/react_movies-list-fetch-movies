{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","films.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","API_URL","getFilm","film","a","fetch","response","ok","json","Error","status","text","FindMovie","useState","movieTitle","setMovieTitle","setMovie","hasError","setHasError","updateMovies","loadFilm","Response","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","App","setMovies","find","m","ReactDOM","render","document","getElementById"],"mappings":"+TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,+CCffC,EAAU,6CAET,SAAeC,EAAtB,kC,4CAAO,WAAuBC,GAAvB,eAAAC,EAAA,sEACkBC,MAAM,GAAD,OAAIJ,GAAJ,OAAcE,IADrC,YACCG,EADD,QAGQC,GAHR,yCAIID,EAASE,QAJb,gCAOE,IAAIC,MAAJ,UAAaH,EAASI,OAAtB,aAAiCJ,EAASK,QAP5C,4C,sBCQA,IAAMC,EAA6B,SAACvB,GACzC,MAAoCwB,mBAAiB,IAArD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,mBAAuB,MAAjD,mBAAOvB,EAAP,KAAc0B,EAAd,KACA,EAAgCH,oBAAkB,GAAlD,mBAAOI,EAAP,KAAiBC,EAAjB,KACQC,EAAiB9B,EAAjB8B,aAQFC,EAAQ,uCAAG,4BAAAhB,EAAA,sEACIF,EAAQY,GADZ,OAGO,UAFhBX,EADS,QAGNkB,SACPL,EAASb,IAETe,GAAY,GACZF,EAAS,OAPI,2CAAH,qDAsBd,OACE,qCACE,uBAAMzB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,wBAAOA,UAAU,QAAQ+B,QAAQ,cAAjC,wBAEE,qBAAK/B,UAAU,UAAf,SACE,uBACEgC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZlC,UAAWmC,IACT,QACA,CAAE,YAAaT,IAEjBU,MAAOb,EACPc,SA5CW,SAACC,GACxBd,EAAcc,EAAMC,OAAOH,OAC3BX,EAAS,MACTE,GAAY,WA6CLD,GACC,mBAAG1B,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEgC,KAAK,SACLhC,UAAU,kBACVwC,QA3CQ,WAClBX,KAuCQ,4BASF,qBAAK7B,UAAU,UAAf,SACE,wBACEgC,KAAK,SACLhC,UAAU,oBACVwC,QAjDY,WACR,OAAVzC,IACF6B,EAAa7B,GACbyB,EAAc,MA2CR,qCAWN,sBAAKxB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,GAAS,cAAC,EAAD,CAAWA,MAAOA,WC3FvB0C,EAAgB,WAC3B,MAA4BnB,mBAAkB,IAA9C,mBAAOf,EAAP,KAAemC,EAAf,KAeA,OACE,sBAAK1C,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEO,OAAQA,MAGZ,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAW4B,aArBI,SAAC7B,GACCQ,EAAOoC,MAAK,SAACC,GAAD,OAAQA,EAAEnC,SAAWV,EAAMU,WAG1DiC,EAAU,GAAD,mBAEFnC,GAFE,CAGLR,cCXV8C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7837016a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'http://www.omdbapi.com/?apikey=dae73c3e&t=';\n\nexport async function getFilm(film: string) {\n  const response = await fetch(`${API_URL}${film}`);\n\n  if (response.ok) {\n    return response.json();\n  }\n\n  return new Error(`${response.status}: ${response.text}`);\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getFilm } from '../../films';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  updateMovies: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const [movieTitle, setMovieTitle] = useState<string>('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [hasError, setHasError] = useState<boolean>(false);\n  const { updateMovies } = props;\n\n  const changeMovieTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMovieTitle(event.target.value);\n    setMovie(null);\n    setHasError(false);\n  };\n\n  const loadFilm = async () => {\n    const film = await getFilm(movieTitle);\n\n    if (film.Response === 'True') {\n      setMovie(film);\n    } else {\n      setHasError(true);\n      setMovie(null);\n    }\n  };\n\n  const handleMovie = () => {\n    loadFilm();\n  };\n\n  const changeMovieList = () => {\n    if (movie !== null) {\n      updateMovies(movie);\n      setMovieTitle('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classNames(\n                  'input',\n                  { 'is-danger': hasError },\n                )}\n                value={movieTitle}\n                onChange={changeMovieTitle}\n              />\n            </div>\n          </label>\n          {hasError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={changeMovieList}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const updateMovies = (movie: Movie) => {\n    const isMovieAdded = movies.find((m) => (m.imdbID === movie.imdbID));\n\n    if (!isMovieAdded) {\n      setMovies(\n        [\n          ...movies,\n          movie,\n        ],\n      );\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie updateMovies={updateMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}